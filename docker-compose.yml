services:
  postgres:
    image: postgres:15
    container_name: vado-postgres
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U vadmark -d vadodb" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: vadmark
      POSTGRES_PASSWORD: 5125341
      POSTGRES_DB: vadodb
#    ports:
#      - "5432:5432" # Не пробрасываем порт, потому что локально уже запущен Postgres на этом порту
    volumes:
      - postgres-data:/var/lib/postgresql/data # том для сохранения БД
      - ./db:/docker-entrypoint-initdb.d # SQL-скрипты при старте
    networks:
      - vado-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092" # для хоста
      - "9093:9093" # для Docker сети
    environment:
      # === KRaft (без Zookeeper) ===
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      CLUSTER_ID: rRaftCluster-001
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - vado-net
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list > /dev/null 2>&1" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 15s

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_READONLY=false
    depends_on:
      - kafka
    networks:
      - vado-net

  vado-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vado-server
    ports:
      - "5556:5556" # порт хоста: порт контейнера
      - "50051:50051" # gRPC
    restart: unless-stopped
    environment:
      PORT: 5556
      GRPC_PORT: 50051
      POSTGRES_DSN: postgres://vadmark:5125341@postgres:5432/vadodb?sslmode=disable
      GIN_MODE: release
      JWT_SECRET: asdnc9sadc8n23
      KAFKA_BROKERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy # app ждет healthcheck БД
    networks:
      - vado-net

networks:
  vado-net:

volumes:
  postgres-data:
  kafka_data: